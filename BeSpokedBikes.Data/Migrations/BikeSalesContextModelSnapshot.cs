// <auto-generated />
using System;
using BeSpokedBikes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeSpokedBikes.Data.Migrations
{
    [DbContext(typeof(BikeSalesContext))]
    partial class BikeSalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeSpokedBikes.Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "233 Whos Street, Whos City, TN 37356",
                            FirstName = "Tom",
                            LastName = "Milton",
                            Phone = "(555)557-5577",
                            StartDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(2664)
                        },
                        new
                        {
                            Id = 2,
                            Address = "322 That Street, That City, PA 39601",
                            FirstName = "Jim",
                            LastName = "Harison",
                            Phone = "(555)559-9577",
                            StartDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(2895)
                        },
                        new
                        {
                            Id = 3,
                            Address = "966 Whos Street, Whos City, TN 37356",
                            FirstName = "Kelly",
                            LastName = "Belly",
                            Phone = "(555)551-5511",
                            StartDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(2902)
                        });
                });

            modelBuilder.Entity("BeSpokedBikes.Data.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeginDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 0.20000000000000001,
                            EndDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            BeginDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 0.10000000000000001,
                            EndDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            BeginDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 0.050000000000000003,
                            EndDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            BeginDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 0.20000000000000001,
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            BeginDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 0.10000000000000001,
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2
                        },
                        new
                        {
                            Id = 6,
                            BeginDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 0.050000000000000003,
                            EndDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("BeSpokedBikes.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CommissionPercentage")
                        .HasColumnType("float");

                    b.Property<string>("Manufacture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<int>("QtyOnHand")
                        .HasColumnType("int");

                    b.Property<double>("SalePrice")
                        .HasColumnType("float");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommissionPercentage = 0.14999999999999999,
                            Manufacture = "Manufacturer1",
                            Name = "Product1",
                            PurchasePrice = 100.0,
                            QtyOnHand = 10,
                            SalePrice = 100.0,
                            Style = "Style1"
                        },
                        new
                        {
                            Id = 2,
                            CommissionPercentage = 0.20000000000000001,
                            Manufacture = "Manufacturer2",
                            Name = "Product2",
                            PurchasePrice = 200.0,
                            QtyOnHand = 5,
                            SalePrice = 170.0,
                            Style = "Style2"
                        },
                        new
                        {
                            Id = 3,
                            CommissionPercentage = 0.33000000000000002,
                            Manufacture = "Manufacturer3",
                            Name = "Product3",
                            PurchasePrice = 200.0,
                            QtyOnHand = 500,
                            SalePrice = 300.0,
                            Style = "Style3"
                        },
                        new
                        {
                            Id = 4,
                            CommissionPercentage = 0.33000000000000002,
                            Manufacture = "Manufacturer3",
                            Name = "Product4",
                            PurchasePrice = 200.0,
                            QtyOnHand = 0,
                            SalePrice = 300.0,
                            Style = "Style3"
                        });
                });

            modelBuilder.Entity("BeSpokedBikes.Data.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalesPersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            ProductId = 1,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4050),
                            SalesPersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            ProductId = 2,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4272),
                            SalesPersonId = 1
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 1,
                            ProductId = 3,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4280),
                            SalesPersonId = 1
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3,
                            ProductId = 1,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4282),
                            SalesPersonId = 1
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 3,
                            ProductId = 2,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4284),
                            SalesPersonId = 2
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 3,
                            ProductId = 3,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4286),
                            SalesPersonId = 2
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 2,
                            ProductId = 3,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4288),
                            SalesPersonId = 2
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 2,
                            ProductId = 3,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4290),
                            SalesPersonId = 2
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 2,
                            ProductId = 3,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4292),
                            SalesPersonId = 2
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 2,
                            ProductId = 3,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4296),
                            SalesPersonId = 3
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 2,
                            ProductId = 3,
                            SaleDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(4298),
                            SalesPersonId = 2
                        });
                });

            modelBuilder.Entity("BeSpokedBikes.Data.Entities.SalesPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SalesPersons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "455 The Street, The City, GA 30107",
                            FirstName = "John",
                            LastName = "Doe",
                            Manager = "Johnson",
                            Phone = "(555)555-5555",
                            StartDate = new DateTime(2021, 9, 16, 18, 42, 8, 764, DateTimeKind.Local).AddTicks(2751)
                        },
                        new
                        {
                            Id = 2,
                            Address = "455 The Street, The City, GA 30107",
                            FirstName = "Jane",
                            LastName = "Doe",
                            Manager = "Johnson",
                            Phone = "(555)555-5555",
                            StartDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(871)
                        },
                        new
                        {
                            Id = 3,
                            Address = "544 My Street, My City, GA 30107",
                            FirstName = "Brian",
                            LastName = "Haynes",
                            Manager = "Henry",
                            Phone = "(555)556-5555",
                            StartDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(895),
                            TerminationDate = new DateTime(2021, 9, 16, 18, 42, 8, 766, DateTimeKind.Local).AddTicks(898)
                        });
                });

            modelBuilder.Entity("BeSpokedBikes.Data.Entities.Discount", b =>
                {
                    b.HasOne("BeSpokedBikes.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BeSpokedBikes.Data.Entities.Sale", b =>
                {
                    b.HasOne("BeSpokedBikes.Data.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeSpokedBikes.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeSpokedBikes.Data.Entities.SalesPerson", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("SalesPerson");
                });
#pragma warning restore 612, 618
        }
    }
}
